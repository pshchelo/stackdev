#!/bin/sh -x
# Cirros-targeting userdata that:
# - creates script that can start and stop CPU load on all cores
# - starts trivial netcat-based HTTP server that responds to any request
#   with HTTP 200 and hostname in the response body.
ncport=${NC_PORT:-80}
cat > /bin/cpuload << EOF
#! /bin/sh
PID_FILE=/tmp/cpuload.pid
HOSTNAME=\$(hostname)
set_status() {
    if [ -f "\$PID_FILE" ]; then
        inprogress=true
    else
        inprogress=false
    fi
}
print_status() {
    local _load_on=\$1
    if \$_load_on; then
        echo "\${HOSTNAME} - CPU load in progress"
     else
        echo "\${HOSTNAME} - CPU load is not running"
    fi
}
cpu_load() {
    set_status
    if \$inprogress; then
        print_status \$inprogress
        exit 1
    else
        echo "\${HOSTNAME} - Starting CPU load on \$NUM_CPU cores"
        for in in \$( seq \$NUM_CPU ); do
            cat /dev/urandom >> /dev/null 2>&1 &
            echo \$! >> \$PID_FILE
        done
        exit 0
    fi
}
cpu_release() {
    set_status
    if \$inprogress; then
        echo "\${HOSTNAME} - Releasing CPU load"
        cat \$PID_FILE | xargs kill
        rm -f \$PID_FILE
        exit 0
    else
        print_status \$inprogress
        exit 1
    fi
}
case \$1 in
    -s | --status)
        set_status
        print_status \$inprogress
    ;;
    -r | --release)
        cpu_release
    ;;
    -i | --identify)
        echo \${HOSTNAME}
    ;;
    -h | --help)
        echo "cpuload [-r,--release|-i,--identify|-s,--status|-h,--help]"
        echo "        without arguments starts CPU load"
        echo "        --release   stop CPU load if running"
        echo "        --status    report if CPU load is in progress"
        echo "        --identify  print hostname"
        echo "        --help      pring this message"
        echo "        exit code: 1 if releasing unstarted load"
        echo "                     if starting already started load"

    ;;
    *)
        if [ -n \$1 ]; then
            NUM_CPU=\$1
        else
            NUM_CPU=\$(grep -c ^processor /proc/cpuinfo 2>/dev/null || sysctl -n hw.ncpu)
        fi
        cpu_load
    ;;
esac
EOF
chmod 777 /bin/cpuload
cat > /etc/init.d/S99httpnc << EOF
#!/bin/sh
echo "Top of NC HTTP server init script"
start() {
    echo -n "Starting NC HTTP server: "
    body=\$(hostname)
    start-stop-daemon -S -q -b -m -p /var/run/S99webnc.pid -x nc -- -lk -p $ncport -e sh -c "echo -e \"HTTP/1.1 200 OK\r\nContent-Length: \${#body}\r\n\r\n\${body}\""
    [ \$? = 0 ] && echo "OK" || echo "FAIL"
}
stop() {
    echo -n "Stopping NC HTTP server: "
    start-stop-daemon -Kqp /var/run/S99webnc.pid
    [ \$? = 0 ] && echo "OK" || echo "FAIL"
}
restart() {
    stop
    start
}
case "\$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart|reload)
        restart
        ;;
    *)
        echo "Usage \$0 {start|stop|restart}"
        exit 1
esac
exit \$?
EOF
chmod +x /etc/init.d/S99httpnc
ln -s /etc/init.d/S99httpnc /etc/rc3.d/S99-http-nc
/etc/init.d/S99httpnc start
