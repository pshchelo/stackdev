heat_template_version: 2015-10-15

description: |
  Test Heat autoscaling based on Ceilometer metering and alarms.
  Shell script used to (un)load CPU is located in the same repo.
  Execute these commands on the instance via SSH:
  "cpuload" to load CPU, "cpuload -r" to release the CPU load.

parameters:
  key_name:
    type: string
    default: demo
  flavor:
    type: string
    default: m1.nano
  image:
    type: string
    default: cirros
  net:
    type: string
    default: heat-net

resources:

  loader:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ungrouped
      config:
        str_replace:
          template: |
            #!/bin/sh -x
            echo 'SCRIPT' > /bin/cpuload
            chmod 777 /bin/cpuload
          params:
            SCRIPT: {get_file: "../../scripts/cpuload"}

  sec_group:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
      - remote_ip_prefix: 0.0.0.0/0
        protocol: tcp
        port_range_min: 22
        port_range_max: 22

  my_asg:
    type: OS::Heat::AutoScalingGroup
    properties:
      min_size: 1
      max_size: 2
      resource:
        type: OS::Nova::Server
        properties:
          metadata: {"metering.stack": {get_param: "OS::stack_id"}}
          key_name: { get_param: key_name }
          image: { get_param: image }
          flavor: { get_param: flavor }
          networks:
            - network: { get_param: net }
          security_groups:
          - get_resource: sec_group
          user_data_format: RAW
          user_data: { get_resource: loader }

  scale_up_policy:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: {get_resource: my_asg}
      cooldown: 60
      scaling_adjustment: 1

  scale_down_policy:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: {get_resource: my_asg}
      cooldown: 60
      scaling_adjustment: '-1'

  cpu_alarm_high:
    type: OS::Ceilometer::Alarm
    properties:
      description: Scale-up if the average CPU > 50% for 1 minute
      meter_name: cpu_util
      statistic: avg
      period: 60
      evaluation_periods: 1
      threshold: 50
      alarm_actions:
        - {get_attr: [scale_up_policy, alarm_url]}
      matching_metadata: {"metadata.user_metadata.stack": {get_param: "OS::stack_id"}}
      comparison_operator: gt

  cpu_alarm_low:
    type: OS::Ceilometer::Alarm
    properties:
      description: Scale-down if the average CPU < 15% for 10 minutes
      meter_name: cpu_util
      statistic: avg
      period: 60
      evaluation_periods: 1
      threshold: 15
      alarm_actions:
        - {get_attr: [scale_down_policy, alarm_url]}
      matching_metadata: {"metadata.user_metadata.stack": {get_param: "OS::stack_id"}}
      comparison_operator: lt

outputs:
  server_ip:
    description: IP address of the server, use to execute commands via SSH
    value: { get_attr: [ my_asg, resource.0, networks, private, 0 ] }
  scaleup:
    description: POST to this webhook to trigger scaling up manually
    value: {get_attr: [scale_up_policy, alarm_url]}
  scaledn:
    description: POST to this webhook to trigger scaling down manually
    value: {get_attr: [scale_down_policy, alarm_url]}
